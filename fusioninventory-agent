#!/usr/bin/perl

use strict;
use warnings;

use English qw(-no_match_vars);

foreach (@ARGV) {
    if (/^--devlib$/) {
        print STDERR "[info] --devlib option found, developer mode enabled\n";
        unshift @INC, 'lib';
    }
}

if ($ENV{REALLIB}) {
    @INC = split(/:/,$ENV{REALLIB});
}

eval {
    require FusionInventory::Agent;
};
if ($EVAL_ERROR) {
    print STDERR "Failed to load FusionInventory::Agent, $EVAL_ERROR\n";
    print STDERR "you can run the agent directly from its source directory ";
    print STDERR "with --devlib\n";
    exit 1;
}

eval {
    my $agent = FusionInventory::Agent->new();
    $agent->run();
};

if ($EVAL_ERROR) {
    print STDERR "Execution failed. Are you sure the software is fully ";
    print STDERR "installed\n";
    print STDERR "and an old version of the agent not already present on the ";
    print STDERR "system?\n";
    print STDERR "___\n";
    print STDERR $EVAL_ERROR;
    exit 1;
}
__END__

=head1 NAME

fusioninventory-agent - FusionInventory agent For Linux/UNIX, Windows and MacOSX

=head1 SYNOPSIS

B<fusioninventory-agent> [options] [--server server|--local directory|--sdout]

  Target selection options:
    -s --server=URI     server to send execution result
    -l --local=DIR      directory to store execution result
    --stdout            display execution result on STDOUT

  Task disabling options:
    --no-inventory      do not run inventory task
    --no-wakeonlan      do not run wakeonlan task
    --no-snmpquery      do not run SNMP query task
    --no-netdiscovery   do not run net discovery task
    --no-ocsdeploy      do not run software deployment task

  Scheduling options:
    --lazy              skip target if next execution date is not reached
    --delaytime=TIME    initial target scheduling time, in seconds
    -w --wait=TIME      scheduling time between each target, in seconds

  Network connection options:
    -u --user=USER      user for server authentication
    -p --password=PWD   password for server authentication
    -P --proxy=PROXY    proxy address
    --ca-cert-dir=DIR   SSL root certificates directory
    --ca-cert-file=FILE SSL root certificates file
    --no-ssl-check      do not check server SSL certificate

  Web interface options:
    --no-www              do not use web interface
    --www-ip=IP           network interface to listen to
    --www-trust-localhost trust local requests without token

  Logging options:
    --logger               logging backend to use (File, Stderr or Syslog)
    --logfile=FILE         file to use for logging
    --logfile-maxsize=SIZE maximum log file size, in MB
    --color                use color in the console
    --logfacility=FACILITY syslog facility to use for logging

  Setup options:
    --basevardir=DIR    writable data directory
    --share-dir=DIR     read-only data directory
    --conf-file=FILE    configuration file
    --devlib            load modules from ./lib directory only

  Extra options:
    -d --daemon         run the agent as a daemon
    --no-fork           do not fork in background
    -i --info           verbose mode
    --debug             debug mode
    -t --tag=TAG        use TAG as tag
    --version           print the version

  Inventory task specific options:
    -f --force          send an inventory without asking the server
    --no-printer        do not return printer list in inventory
    --no-software       do not return installed software list
    --scan-homedirs     permit to scan home user directories
    --format=FORMAT     export format (html or xml)
    --backend-collect-timeout maximum execution time of inventory
                              module

=head1 EXAMPLES

    % fusioninventory-agent --server localhost
    # execute all available tasks required by a local server

    % fusioninventory-agent --server http://localhost/ocsinventory2
    # execute all available tasks required by a local server, using a specific
    # URI

    % fusioninventory-agent --server https://localhost/ocsinventory
    # execute all available tasks required by a local server, using a secure
    # connection

    % fusioninventory-agent --server localhost --user toto --password pw
    # execute all available tasks required by a local server, using HTTP
    # authentication

    % fusioninventory-agent --local /tmp
    # execute all available tasks and write the result in /tmp directory

    % fusioninventory-agent --local /tmp --format html
    # execute all available tasks and write the result in /tmp directory in HTML
    # format

    % fusioninventory-agent --lazy
    # no target specified, execution failure

    % fusioninventory-agent --delaytime 60 -d
    # no target specified, execution failure

=head1 DESCRIPTION

F<fusioninventory-agent> is an agent for OCS Inventory server and
FusionInventory for GLPI servers. It creates local inventory of the machines
(hardware and software) and send it to the server. It can also write it
in a local XML file.
This agent is the successor of the former linux_agent which was released with
OCS 1.01 and prior. It also replaces the Solaris/AIX/BSD unofficial agents.

Supported systems:

=over 4

=item F<Windows> (since Windows 2000)

=item F<GNU/Linux>

=item F<MacOSX>

=item F<Solaris>

=item F<FreeBSD>

=item F<NetBSD>

=item F<OpenBSD>

=item F<AIX>

=item F<HP-UX>

=item F<GNU/kFreeBSD>

=back

=head1 INSTALLATION

=head2 PREREQUISITES

Minimum perl version: 5.8

Additional mandatory perl modules:

=over

=item Digest::MD5

=item XML::Simple

=item LWP

=item Net::IP

=item UNIVERSAL::require

=item Mac::SysProfile (MacOs only)

=back

Additional optional perl modules:

=over

=item Compress::Zlib, for message compression

=item HTTP::Daemon, for web interface

=item Net::CUPS (v0.60 minimum), for printers detection 

=item File::ShareDir, for automatic data directory determination

=item Proc::Daemon, for daemon mode (Unix only)

=item Proc::PID::File, for daemon mode (Unix only)

=back

Additional optional programs:

=over

=item nmap or ipdiscover, for network discovery

=item dmidecode (linux or bsd) for hardware inventory

=item lspci (linux or bsd) for hardware inventory

=back

=head2 PROCEDURE

Once the archive is unpacked, use these commands:

    perl Makefile.PL
    make
    make install

You can also run the agent from the tarball directory. In this case, use
the --devlib flag to load the library from the local directory.

=head2 SYSTEM-SPECIFIC INFORMATIONS

=head3 Solaris

Sun Studio seems to be needed to build the dependency. The generated Makefile
needs gmake to be executed. The default installation will install the binary in
/usr/perl5/5.XXXXX/bin, set you $PATH variable according to that.

On Solaris/SPARC, you must install sneep and record the Serial Number with
it.
Download it from L<http://www.sun.com/download/products.xml?id=4304155a>

=head3 Windows

If you don't want to use the installer for Windows you can follow the
installation process avalaible there:
L<http://forge.fusioninventory.org/projects/fusioninventory-agent/wiki/RunAgentWin32>

=head2 POST-INSTALLATION

Run ./fusioninventory-agent-config for automatic configuration.

=head1 OCS INVENTORY PROTOCOL

FusionInventory Agent uses OCS Inventory protocol and is compatible with OCS
Inventory server. The agent uses the same protocol with the FusionInventory
For GLPI plugin.

The OCS protocol is basicly an exchange of XML file done over HTTP(S).

=head2 First, The PROLOG

The agent send a first message to give it's ID (DEVICEID). The
server send back to the agent an XML file with a list of parameter. It's the
PROLOG RESP. You can see it if you're in Debug mode.
In this PROLOG, the server send the PROLOG_FREQ. The agent will use it to
know when it need to contact the server for the next time.

=head2 Module execution

The agent will launch each modules and pass the list of options found in the
PROLOG RESP as parameter. The module can send information directly to the
server (inventory, SNMP scan result, etc)

=head2 Windows service or Deamon mode

In deamon mode, the agent wait during a period between the last PROLOG and
PROLOG_FREQ. If PROLOG_FREQ is not set, it will use --delaytime value.
The default value is 3600.

=head1 OPTIONS

Most of the options are available in a I<short> form and a I<long> form.  For
example, the two lines below are all equivalent:

    % fusioninventory-agent -s localhost
    % fusioninventory-agent --server localhost

=head2 Target selection options

At least one of them must be selected.

=over

=item B<-s>, B<--server>=I<URI>

The uri of the server. If I<URI> doesn't start with http:// or https://, the
agent assume the parameter is a hostname and rewrite it like that:

    % --server=http://servername/ocsinventory

If you want to use https or another virtual directory (e.g: /ocsinventory2)
you need to enter the full path.

You can declare more than one server if you use the ',' delimiter.

    % --server=http://servername/ocsinventory,server2

In general, OCS Inventory server URL have this format:

    http://servername/ocsinventory

and FusionInventory for GLPI this one:

    http://servername/glpi/plugins/fusioninventory/front/plugin_fusioninventory.communication.php

=item B<-l>, B<--local>=I<DIR>

Write an inventory in the I<DIR> directory. A new file will be created if
needed.

=item B<--stdout>

Print the inventory on stdout.

=back

=head2 Task selection options

With a local target, all available tasks are executed. With a server target,
only those required by the server are executed.

=over

=item B<--no-inventory>

Do not run the inventory task.

=item B<--no-wakeonlan>

Do not run the wakeonlan task.

=item B<--no-netdiscovery>

Do not run the net discovery task.

=item B<--no-snmpquery>

Do not run the SNMP query task.

=item B<--no-ocsdeploy>

Do not run the software deployment task.

=back

=head2 Scheduling options

=over

=item B<--delaytime>=I<TIME>

This option defaults to waiting a random() time between 0 and 3600 before
initially contacting the server assuming NO PROLOG_FREQ has been set.
Once PROLOG_FREQ has been set, it uses that number at the top end of
it's random setting. Useful for pre-setting a deployed agent's initial
start time (so you don't jam the server all at once, but don't have to
wait an hour to make sure the deployment worked).

=item B<--lazy>

Do not contact the server more than one time during the PROLOG_FREQ and do
an exit if there is nothing to do. Useful if you want to start the agent
script regulary from the crontab but don't want to overload the server. This
option is only used when running in non-daemon mode.

=item B<-w> I<TIME>, B<--wait>=I<TIME>

Wait during a random period between 0 and DURATION second before initializing
the connexion with the server. This option is only used when running in
non-daemon mode.

=back

=head2 Inventory task specific options

Those options are only useful when executing an inventory task.

=over

=item B<--backend-collect-timeout>=I<SECONDS>

Maximum execution time for an inventory module.

=item B<--scan-homedirs>

Allow to scan user home directories, for virtual machines.

=item B<--no-printer>

Do not inventory printers.

=item B<--no-software>

Do not inventory softwares.

=item B<--format>=I<FORMAT>

Save the local inventory in given format (default: HTML). This option is only
used for a local target.

=item B<-f>, B<--force>

The agent ask first the server if it should send an inventory of the machine.
If the server doesn't know the machine or has outdated informations, it will
request it.  With this option, the agent ignore the server anwser and send an
inventory. This options is only used with a server target.

=back

=head2 Network connection options

=over

=item B<-u> I<USER>, B<--user>=I<USER>

Use I<USER> for HTTP authentication with the server.

=item B<-p>, B<--password>=I<PASSWORD>

Use I<PASSWORD> for HTTP authentication with the server.

=item B<-P>, B<--proxy>=I<PROXY>

Use I<PROXY> to specify a proxy HTTP server. By default, the agent uses
HTTP_PROXY environment variable.

=item B<--ca-cert-dir>=I<DIR>

Path to the SSL root certificates directory.

=item B<--ca-cert-file>=I<FILE>

Path to the SSL root certificates bundle file.

=item B<--no-ssl-check>

Do not check server SSL certificates.

=back

=head2 Web interface options

=over

=item B<--no-www>

Do not use the web interface.

=item B<--www-ip>=I<IP>

The network interface used by the web interface (default: all interfaces).

=item B<--www-port>=I<PORT>

The network port used by the web interface (default: 62354).

=item B<--www-trust-localhost>

Trust local requests. This allow to force command execution without requiring
an authentication token.

=back

=head2 Logging options

=over

=item B<--logger>=I<LOGGER>

The logger backend to use (default: Stderr). It can be:

=over 4

=item

Stderr: print the messages directly in the console.

=item

File: log the error in a log file.

=item

Syslog: use the local syslog server to log the messages.

=back

You can use more than one parameter if you use ',' as delimiter. E.g:

 % fusioinventory-agent --logger=Syslog,Stderr --local=/tmp

=item B<--logfile>=I<FILE>

The file to use for storing messages. This option is only used by the File
logging backend.

=item B<--logfile-maxsize>=I<SIZE>

The maximum size of the log file, in MB, before truncation (default:
unlimited). This option is only used by the File logging backend.

=item B<--color>

Display color on the terminal. This option is only used by the Stderr logging
backend. This option is ignored on Windows.

=item B<--logfacility>=I<FACILITY>

The syslog facility to use (default: USER). This option is only used by the
Syslog logging backend.

=back

=head2 Setup options

=over

=item B<--conf-file=FILE>

Load the configuration file from the given location. This option is ignored on
Windows.

=item B<--share-dir>=I<DIR>

The directory where are stored the shared files.

=item B<--basevardir>=I<DIR>

The directory where the agent should store its files.

=item B<--devlib>

This option is designed for the developer. With it enabled,
fusioninventory-agent won't try to load the Backend module installed
on the system. Instead it will scan the ./lib directory.
It may also be useful if you don't want to install the agent on
your system.

This option can only be used as command line argument. It will be
ignored if you set it in a config file or in Windows registry.

=back

=head2 Other options

=over

=item B<-d>, B<--daemon>

Launch fusioninventory-agent as daemon in background. Proc::Daemon is needed.

=item B<--no-fork>

Do not fork in background. This option is only used when running in daemon
mode.

=item B<-i>, B<--info>

Turn the verbose mode on.

=item B<--debug>

Turn the debug mode on (more verbose).


=item B<--tag>=I<TAG>

Mark the machine with the I<TAG> tag. Once the initial inventory
is accepted by the server this value is ignored and you've to
change the information directly on the server. The server do so
in order to centralize the administration of the machine.

=item B<--version>

Print the version and exit.

=back

=head1 CONFIGURATION

The agent try to initialize the settings from the B<agent.cfg>
configuration file.

It looks for the file in these location:

=over

=item

/etc/fusioninventory/agent.cfg

=item

/usr/local/etc/fusioninventory/agent.cfg

=back

You can use the B<--conf-file=XXX> parameter to load you own configuration
file from a specific location.

On Windows the settings are loaded from the registry, and the configuration
file is ignored. The information is stored in
HKEY_LOCAL_MACHINE\SOFTWARE\FusionInventory-Agent for 32bits hosts, and in 
HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\FusionInventory-Agent for 64bits hosts.

The command line parameters overwrite the configuration file.

=head1 SECURITY

Some modules like SNMPQuery needs to sent credential from the agent to the
agent. We recommend to enable HTTPS support on the OCS or FusionInventory
For GLPI server.

=head1 AUTHORS

The FusionInventory project L<fusioninventory-devel@lists.alioth.debian.org>

The maintainer is Goneri LE BOUDER <goneri@rulezlan.org>

Please read the AUTHORS, Changes and THANKS files to see who is behind
FusionInventory.

=head1 SEE ALSO

=over 4

=item

FusionInventory website: L<http://www.FusionInventory.org/>

=item

project Forge: L<http://Forge.FusionInventory.org>

=item

The source code of the agent is available on:

=over

=item

Gitorious: L<http://gitorious.org/fusioninventory>

=item

Github: L<http://github.com/fusinv/fusioninventory-agent>

=back

=item

The mailing lists:

=over

=item

L<http://lists.alioth.debian.org/mailman/listinfo/fusioninventory-devel>

=item

L<http://lists.alioth.debian.org/mailman/listinfo/fusioninventory-user>

=back

=item

IRC: #FusionInventory on FreeNode IRC Network

=back

=head1 BUGS

Please, use the mailing lists as much as possible. You can open your own bug
tickets. Patches are welcome. You can also use the bugtracker on
http://forge.fusionInventory.org


=head1 COPYRIGHT

Copyright (C) 2006-2010 OCS Inventory contributors
Copyright (C) 2010 FusionInventory Team

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

The memconf script is maintained by Tom Schmidt
http://myweb.cableone.net/4schmidts/memconf.html
Copyright © 1996-2009 Tom Schmidt

memconf is free software; you can redistribute it and/or modify it under the
terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

FusionInventory::Agent::Backend::Virtualization::Vmsystem uses code from
imvirt:

   Authors:
     Thomas Liske <liske@ibh.de>

   Copyright Holder:
     2008 (C) IBH IT-Service GmbH [http://www.ibh.de/]

   License:
     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; either version 2 of the License, or
     (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this package; if not, write to the Free Software
     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301
     USA


=cut
